version: '3'
name: userhub
services:
  postgres:
    container_name: postgres
    image: postgres:17.0-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
   
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/postgres-definitions.sh:/docker-entrypoint-initdb.d/postgres-definitions.sh

    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 10s
      timeout: 5s
      retries: 5
  
  mongodb:
    image: mongo:8.0.0
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-mongo}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis
    image: redis:7.4.1-alpine3.20
    ports:
      - '6379:6379'
    networks:
      - app-network
    command: redis-server --appendonly yes
    
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
      RABBITMQ_DEFAULT_HOST: ${RABBITMQ_HOST:-localhost}
      RABBITMQ_DEFAULT_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_DEFAULT_HEARTBEAT: ${RABBITMQ_HEARTBEAT:-60}
      RABBITMQ_DEFAULT_PREFETCH_COUNT: ${RABBITMQ_PREFETCH_COUNT:-10}
      RABBITMQ_DEFAULT_PERSISTENT: ${RABBITMQ_PERSISTENT:-true}


    ports:
      - '5672:5672'   # AMQP port
      - '15672:15672' # Management UI port
    volumes:

      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local

